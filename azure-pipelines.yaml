# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-20.04

steps:

- task: AWSShellScript@1
  displayName: 'iniciar terraform'
  inputs:
    awsCredentials: 'Test_AWS_Terraform'
    regionName: 'us-east-1'
    scriptType: 'inline'
    inlineScript: 'terraform init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/'
    
- task: AWSShellScript@1
  displayName: 'terraform plan'
  inputs:
    awsCredentials: 'Test_AWS_Terraform'
    regionName: 'us-east-1'
    scriptType: 'inline'
    inlineScript: 'terraform plan -var-file="backend.tfvars"'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/'
    
- task: AWSShellScript@1
  displayName: 'terraform apply'
  inputs:
    awsCredentials: 'Test_AWS_Terraform'
    regionName: 'us-east-1'
    scriptType: 'inline'
    inlineScript: 'terraform apply -var-file="backend.tfvars" auto-approve'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/'
    
- task: AWSShellScript@1
  displayName: 'finalizar con terraform'
  inputs:
    awsCredentials: 'Test_AWS_Terraform'
    regionName: 'us-east-1'
    scriptType: 'inline'
    inlineScript: 'terraform destroy -var-file="backend.tfvars" auto-approve'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/'
